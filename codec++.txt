//no of notes in the money
//switch case implementation
#include <iostream>

using namespace std;

int main()
{
    int num;
    cin>>num;
    
   switch(1){
     
    case 1:  {  int rs100 = num/100;
                 num -=rs100*100;
                cout<<rs100<<endl;
             }
    case 2:  { 
                 int rs50 = num/50;
                  num-=rs50*50;
                   cout<<rs50<<endl;}
       
    case 3:   {
                int rs20 = num/20;
                  num-=rs20*20;
                  cout<<rs20<<endl;}
       
    case 4:    {
                int rs1=num/1;
                num-=rs1*1;
                cout<<rs1<<endl;}
       
   }
       
 return 0;
}


//function;
power 

#include <iostream>

using namespace std;
void read(int &x,int &y){
    cin>>x>>y;
}

int power(int x,int y){
    int prod=1;
    while(y--){
        prod *=x;
    }
    return prod;
    
}
int main()
{
    int x,y;
    read(x,y);
    int ans = power(x,y);
    cout<<ans<<endl;
    
 return 0;
}

//combination
#include <iostream>

using namespace std;
void read(int &x,int &y){
    cin>>x>>y;
}
int fact(int x)
{
    int prod=1;
    for(int i =1;i<=x;i++)
    {
        prod *= i;
    }
    return prod;
}

int combination(int x,int y){
    int ans =0;
    ans = fact(x)/(fact(y)*fact(x-y));
    return ans;
    
}
int main()
{
    int x,y;
    read(x,y);
    int ans = combination(x,y);
    cout<<ans<<endl;
    
 return 0;
}


//permutation or combination calculator
#include <iostream>

using namespace std;
void read(int &x,int &y){
    cin>>x>>y;
}
void readCharacter(char &ch){
    cin>>ch;
}
int fact(int x)
{
    int prod=1;
    for(int i =1;i<=x;i++)
    {
        prod *= i;
    }
    return prod;
}

int combination(int x,int y){
    int ans =0;
    ans = fact(x)/(fact(y)*fact(x-y));
    return ans;
    
}
int permutation(int x,int y){
    int ans=0;
    ans = fact(x)/fact(x-y);
    return ans;
}

int main()
{
    int x,y;
    char ch;
    read(x,y);
    readCharacter(ch);
    if(ch=='C' || ch=='c')
      cout<<combination(x,y)<<endl;
    else
      cout<<permutation(x,y)<<endl;
    
 return 0;
}

//odd and prime code

#include <iostream>
#include<math.h>

using namespace std;
void read(int &x){
    cin>>x;
}
bool isEven(int x){

    if(x&1)
      return false;
     
  return true;
    
}
bool isPrime(int x){
    for(int i =2;i<=sqrt(x);i++)
    {
        if(x%i==0)
        {
            return false ;
            break;
        }
    }
    return true;
}


int main()
{
    int x;
    read(x);
    if(isEven(x))
     cout<<"even"<<endl;
    else
      cout<<"odd"<<endl;
    if(isPrime(x))
    cout<<"prime"<<endl;
    else
      cout<<"not prime"<<endl;
     
 return 0;
}
//setbitcount 

#include <iostream>
#include<math.h>

using namespace std;
void read(int &x,int &y){
    cin>>x>>y;
}
int setBit(int x){
    int count=0;
    while(x!=0){
        int bit = x&1;
        if(bit==1)
        count++;
        x=x>>1;
    }
    return count;
    
}
int setBitCount(int x,int y){
  
    int ans = setBit(x)+setBit(y);
    return ans;
}




int main()
{
    int x,y;
    read(x,y);
    cout<<setBitCount(x,y)<<endl;
     
 return 0;
}

//fibonacci


#include <iostream>
#include<math.h>

using namespace std;
void read(int &x){
    cin>>x;
}

void fibonacci(int x){
    int a= 0;
    int b =1;
    cout<<a<<" "<<b<<" ";
    for(int i =0;i<=x-2;i++)
    {
        int sum =a+b;
        cout<<sum<<" ";
        a=b;
        b=sum;
    }
}


int main()
{
    int x;
    read(x);
    fibonacci(x);
    //cout<<setBitCount(x)<<endl;
     
 return 0;
}


//initalize an array with the same element 

#include <iostream>

using namespace std;

int main()
{
    int size;cin>>size;
    int arr[size];///avoid this practice 
  //instead do this 
    int arr[1000];
    fill_n(arr,size,100);
    for(int i =0;i<size;i++)
    {
        cout<<arr[i]<<" ";
    }
    return 0;
}


//array exercise;

#include <iostream>

using namespace std;
void update (int arr[],int n){
    n=n+1;
    arr[n-1]=100;
    for(int i =0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}
void printArray(int arr[], int size){
    for(int i =0;i<size;i++)
    {
        cout<<arr[i]<<" ";
    }
    
}
int main()
{
    int size;cin>>size;
    int arr[1000];
    fill_n(arr,size,100);
    update(arr,size);
    printArray(arr,size);
    return 0;
}   



